<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>blog on Leo&#39;s blog</title>
    <link>https://bjmqfg83.github.io/blog/</link>
    <description>Recent content in blog on Leo&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Tue, 29 Oct 2019 13:49:23 +0600</lastBuildDate>
    
	<atom:link href="https://bjmqfg83.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>愛的魔力轉圈圈-不斷重複的迴圈動態</title>
      <link>https://bjmqfg83.github.io/blog/looping_ani/</link>
      <pubDate>Fri, 25 Dec 2020 10:12:30 +0800</pubDate>
      
      <guid>https://bjmqfg83.github.io/blog/looping_ani/</guid>
      <description>前一陣子同事丟了一個問題要我動動腦練習寫一個迴圈動態，規則如下
 以中心點做為起始點 不斷重複 不論版面是3x3、5x5、7x7、9x9甚至是以上都要能夠正常執行  開發歷程:
開發的時候在元素上標示上數字可以在開發時幫忙找出中點以及跑迴圈的相關邏輯,建議標上去
接下來就是找出所需的相關資訊，稍後會在說明要迴圈數、轉折點的主因
 起始點 迴圈數 轉折點  起始點直接除以2取最小整數即可</description>
    </item>
    
    <item>
      <title>如何在hugo上安裝utterances?</title>
      <link>https://bjmqfg83.github.io/blog/hugo_unnerances/</link>
      <pubDate>Tue, 08 Sep 2020 11:40:00 +0800</pubDate>
      
      <guid>https://bjmqfg83.github.io/blog/hugo_unnerances/</guid>
      <description>如果想要讓訪客針對你的文章發表評論的話我們可以透過 Disqus 或是 Utterances 快速建立評論留言板
其實一開始建立個人部落格時評論的套件我使用的是disqus，但是我丟到google的 PageSpeed 測試時發現整個網頁的載入時間有大半以上都花在disqus上面且有很多載入後卻沒有使用到，所以之後便決定改用utterances
另外上網查了相關的文章說disqus有個資相關的問題，文章結尾會附上相關連結有興趣的可以看一下
Utterances是什麼? utterances是一個基於github issue的套件，其原理是在github上建立一個公開的repo讓訪客可以針對文章在repo上建立相關的issue，接下來就來跟大家介紹如何在頁面上添加utterances</description>
    </item>
    
    <item>
      <title>Css flex-shrink是怎麼縮的?</title>
      <link>https://bjmqfg83.github.io/blog/flex-shrink/</link>
      <pubDate>Tue, 25 Aug 2020 12:54:00 +0800</pubDate>
      
      <guid>https://bjmqfg83.github.io/blog/flex-shrink/</guid>
      <description>當內部元素的寬度超過容器寬度時我們可以使用flex-shrink將內部元素的寬度縮減讓元素不會超過容器
那flex-shrink到底是怎麼做寬度的縮減?
基礎公式如下
元素縮減的寬度 = 超出的總寬度 * 該元素的flex-shrink / 各元素flex-shrink總和</description>
    </item>
    
    <item>
      <title>99乘法表-Javascript新手地下城</title>
      <link>https://bjmqfg83.github.io/blog/multiplication_table/</link>
      <pubDate>Tue, 25 Aug 2020 10:12:30 +0800</pubDate>
      
      <guid>https://bjmqfg83.github.io/blog/multiplication_table/</guid>
      <description>最近想複習HTML、CSS、Javascript的基礎概念
所以開始寫六角學院的新手地下城題目
使用技術:
JS : let變數、Template literals樣板字串、for迴圈
CSS: SCSS(CSS前處理語言)、BEM風格規範(其實這我不確定名稱是否有完全符合BEM的規範)
開發歷程:</description>
    </item>
    
  </channel>
</rss>